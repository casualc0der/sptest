!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
Log	lib/log.rb	/^class Log$/;"	c
LogLine	lib/logline.rb	/^class LogLine$/;"	c
LogLineFactory	lib/logline_factory.rb	/^class LogLineFactory$/;"	c
Logger	lib/logger.rb	/^class Logger$/;"	c
Parser	lib/parser.rb	/^class Parser$/;"	c
TotalLogline	lib/total_logline.rb	/^class TotalLogline < LogLine$/;"	c
UniqueLogline	lib/unique_logline.rb	/^class UniqueLogline < LogLine$/;"	c
add_ip	lib/logline.rb	/^  def add_ip(ip)$/;"	f	class:LogLine
add_new_logline	lib/log.rb	/^  def add_new_logline(logline)$/;"	f	class:Log
create_logline	lib/logline_factory.rb	/^  def self.create_logline(choice, path)$/;"	F	class:LogLineFactory
format	lib/log.rb	/^  def format$/;"	f	class:Log
format_checker	lib/log.rb	/^  def format_checker(line)$/;"	f	class:Log
format_lines	lib/log.rb	/^  def format_lines(line)$/;"	f	class:Log
generate	lib/log.rb	/^  def generate$/;"	f	class:Log
initialize	lib/log.rb	/^  def initialize(raw_data)$/;"	f	class:Log
initialize	lib/logline.rb	/^  def initialize(path)$/;"	f	class:LogLine
initialize	lib/total_logline.rb	/^  def initialize(path)$/;"	f	class:TotalLogline
initialize	lib/unique_logline.rb	/^  def initialize(path)$/;"	f	class:UniqueLogline
line	lib/parser.rb	/^  def line(logline)$/;"	f	class:Parser
log_finder	lib/log.rb	/^  def log_finder(logline)$/;"	f	class:Log
open	lib/log.rb	/^  def open$/;"	f	class:Log
option	lib/log.rb	/^  def option(opts)$/;"	f	class:Log
report	lib/logline.rb	/^  def report$/;"	f	class:LogLine
report	lib/parser.rb	/^  def report(log)$/;"	f	class:Parser
report	lib/total_logline.rb	/^  def report$/;"	f	class:TotalLogline
report	lib/unique_logline.rb	/^  def report$/;"	f	class:UniqueLogline
run	lib/logger.rb	/^  def self.run$/;"	F	class:Logger
top_line	lib/parser.rb	/^  def top_line$/;"	f	class:Parser
validation?	lib/log.rb	/^  def validation?$/;"	f	class:Log
